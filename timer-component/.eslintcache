[{"/home/jcronin/Documents/react-spinup/timer-component/src/index.tsx":"1","/home/jcronin/Documents/react-spinup/timer-component/src/reportWebVitals.ts":"2","/home/jcronin/Documents/react-spinup/timer-component/src/TimerWrapper.tsx":"3","/home/jcronin/Documents/react-spinup/timer-component/src/Button.tsx":"4","/home/jcronin/Documents/react-spinup/timer-component/src/Timer.tsx":"5"},{"size":574,"mtime":1612211789919,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1612209777190,"results":"8","hashOfConfig":"7"},{"size":1331,"mtime":1612213356360,"results":"9","hashOfConfig":"7"},{"size":279,"mtime":1612213487077,"results":"10","hashOfConfig":"7"},{"size":161,"mtime":1612212992227,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1qhts6b",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/jcronin/Documents/react-spinup/timer-component/src/index.tsx",[],["24","25"],"/home/jcronin/Documents/react-spinup/timer-component/src/reportWebVitals.ts",[],"/home/jcronin/Documents/react-spinup/timer-component/src/TimerWrapper.tsx",["26"],"import * as React from 'react';\nimport { Button } from './Button';\nimport { Timer } from './Timer';\n\ninterface ITimerWrapperProps {\n\n}\n\ninterface ITimerWrapperState {\n    time: number;\n    intervalId?: NodeJS.Timeout\n}\n\nexport class TimerWrapper extends React.Component<ITimerWrapperProps, ITimerWrapperState> {\n    constructor(props: ITimerWrapperProps) {\n        super(props);\n\n        this.state = {\n            time: -1\n        };\n    }\n\n    public render() {\n        return (<div>\n            <div className=\"btn-group\" role=\"group\">\n                {[5,10,15].map(interval => <Button time={interval} setTimer={(time) => this.handleTimerChange(time)} />)}\n            </div>\n            <Timer time={this.state.time} />\n            { this.state.time === 0 ? <h1 style={{color: 'red'}}>HONK!</h1> : <h1></h1> }\n        </div>);\n    }\n\n    public handleTimerChange(time: number) {\n        if(this.state.intervalId) clearInterval(this.state.intervalId);\n\n        this.setState({\n            time,\n            intervalId: setInterval(() => {\n                if(this.state.time === 0) { \n                    clearInterval(this.state.intervalId!);\n\n                    return;\n                }\n                this.setState({\n                    time: this.state.time - 1\n                })\n            }, 1000)\n        });\n    }\n}","/home/jcronin/Documents/react-spinup/timer-component/src/Button.tsx",[],"/home/jcronin/Documents/react-spinup/timer-component/src/Timer.tsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":29,"column":79,"nodeType":"33","endLine":29,"endColumn":83},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]